---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:

- name: platform-automation-tasks
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver
    globs: ["platform-automation-tasks-*.zip"]


- name: platform-automation-image
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver
    globs: ["platform-automation-image-*.zip"]


- name: configuration
  type: git
  source:
    uri: https://github.com/warroyo/pcf-repave-demo
    branch: master


gen-opsman-env: &gen-opsman-env
  image: platform-automation-image
  params:
    INT_om_username: ((opsman.username))
    INT_om_password: ((opsman.password))
    INT_om_decryption_passphrase: ((opsman.decryption_passphrase))
    INT_om_url: ((opsman.endpoint))
  config:
    platform: linux
    inputs:
    - name: configuration
    outputs:
    - name: env
    run:
      path: sh
      args:
      - "-c"
      - |
        om interpolate --config configuration/env.yml \
          --vars-env INT > env/env.yml


jobs:
- name: configure-director
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: generate-opsman-env
    <<: *gen-opsman-env
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: env
    params:
      ENV_FILE: env.yml
      DIRECTOR_CONFIG_FILE: director.yml

- name: repave
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      passed: [configure-director]
      # trigger: true
      params: {unpack: true}
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: generate-opsman-env
    <<: *gen-opsman-env
  - task: repave
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml